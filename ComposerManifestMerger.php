#!/usr/bin/env php
<?php

if (!is_file('.composer.json')) {
	echo('There is no ".composer.json" template file in the current directory "' . getcwd() . '", make sure you are in the right directory and a template exists.');
	exit(1);
}



$composerManifests = glob('*/composer.json');

$joinedManifest = json_decode(file_get_contents('.composer.json'), TRUE);
// As JSON doesn't allow for any comments this is added as manifest key.
$joinedManifest['extra']['neos']['warning'] = 'AUTOGENERATED FILE, ONLY MODIFY THE .composer.json IN THIS DIRECTORY AND RUN THE MERGE SCRIPT.';

$joinedRepositoryPackages = [];

foreach ($composerManifests as $manifestFilepath) {
	$packageName = trim(dirname($manifestFilepath), '/');
	$manifestData = json_decode(file_get_contents($manifestFilepath), TRUE);

	$joinedRepositoryPackages[] = $manifestData['name'];

	if (isset($manifestData['require'])) {
		$joinedManifest['require'] = array_merge($joinedManifest['require'], $manifestData['require']);
	}

	if (isset($manifestData['suggest'])) {
		$joinedManifest['suggest'] = array_merge($joinedManifest['suggest'], $manifestData['suggest']);
	}

	if (isset($manifestData['extra'])) {
		$extras = $manifestData['extra'];

		if (isset($extras['neos']['installer-resource-folders']) && is_array($extras['neos']['installer-resource-folders'])) {
			$extras['neos']['installer-resource-folders'] = array_map(function($resourceFolder) use ($packageName) {
				return $packageName . '/' . $resourceFolder;
			}, $extras['neos']['installer-resource-folders']);
		}

		$joinedManifest['extra'] = array_merge_recursive($joinedManifest['extra'], $extras);
	}

	if (isset($manifestData['autoload'])) {
		foreach ($manifestData['autoload'] as $autoloadType => $mappings) {
			foreach ($mappings as $namespace => $folder) {
				$newFolder = implode('/', [$packageName, $folder]);
				$joinedManifest['autoload'][$autoloadType][$namespace] = $newFolder;
			}
		}
	}
}

foreach ($joinedRepositoryPackages as $containedPackageName) {
	unset($joinedManifest['require'][$containedPackageName]);
	$joinedManifest['replace'][$containedPackageName] = 'self.version';
}

$joinedComposerJson = json_encode($joinedManifest, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES) . PHP_EOL;
file_put_contents('composer.json', $joinedComposerJson);

echo('Written the following merged ' . getcwd() . '/composer.json' . PHP_EOL . PHP_EOL);
echo $joinedComposerJson;

exit(0);
